{"ast":null,"code":"var _jsxFileName = \"/Users/dima/Documents/my Blog/blog/src/component/Blog/BlogPage.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Prismic from '@prismicio/client';\nimport { Date, Link, RichText } from 'prismic-reactjs'; // TODO удаляй неиспользуемый код\n// import { format } from 'date-fns-tz';\n\nimport './style.css';\nimport loader from './components/Loader';\nimport Loader from './components/Loader'; // TODO вынеси в константы эти токены и урлы, хорошей практикой считается разделять это и не держать все одном файле\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiEndpoint = 'https://kelaseff.cdn.prismic.io/api/v2';\nconst accessToken = 'MC5ZSEhub0JNQUFDRUFsdm5u.O--_ve-_vX_vv714Je-_ve-_ve-_vW7vv70K77-977-9d13vv70D77-977-977-9au-_vQfvv71YA33vv70P77-9'; //TODO Следи за форматированием кода\n\nconst BlogPage = () => {\n  _s();\n\n  const [doc, setDocData] = React.useState([]);\n  React.useEffect(() => {\n    const client = Prismic.client(apiEndpoint, {\n      accessToken\n    });\n\n    const fetchData = async () => {\n      const response = await client.query(Prismic.Predicates.at('document.type', 'blog'));\n\n      if (response) {\n        setDocData(response.results);\n      }\n    };\n\n    fetchData();\n  }, []); // TODO удаляй не используемый код\n  // const timestamp = ;\n  // console.log(doc[1].data.data);\n  // TODO форматирование кода и отступы\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (doc === null || doc === void 0 ? void 0 : doc.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogWraper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: RichText.asText(doc[1].data.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: doc[1].data.logo_page.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: RichText.asText(doc[1].data.text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blogWraper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: RichText.asText(doc[0].data.title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: RichText.asText(doc[0].data.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}; // TODO оберни в React.memo\n\n\n_s(BlogPage, \"7F2Wqun08SntStJJH/c+b4sYSxI=\");\n\n_c = BlogPage;\nexport default BlogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"sources":["/Users/dima/Documents/my Blog/blog/src/component/Blog/BlogPage.js"],"names":["React","Prismic","Date","Link","RichText","loader","Loader","apiEndpoint","accessToken","BlogPage","doc","setDocData","useState","useEffect","client","fetchData","response","query","Predicates","at","results","length","asText","data","title","logo_page","url","text"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,QAAqC,iBAArC,C,CACA;AACA;;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;;;AACA,MAAMC,WAAW,GAAG,wCAApB;AACA,MAAMC,WAAW,GAAG,mHAApB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,GAAD,EAAMC,UAAN,IAAoBX,KAAK,CAACY,QAAN,CAAe,EAAf,CAA1B;AAEAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACrB,UAAMC,MAAM,GAAGb,OAAO,CAACa,MAAR,CAAeP,WAAf,EAA4B;AAAEC,MAAAA;AAAF,KAA5B,CAAf;;AACA,UAAMO,SAAS,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACG,KAAP,CACtBhB,OAAO,CAACiB,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,MAAvC,CADsB,CAAvB;;AAGA,UAAIH,QAAJ,EAAc;AACbL,QAAAA,UAAU,CAACK,QAAQ,CAACI,OAAV,CAAV;AACA;AACD,KAPD;;AAQAL,IAAAA,SAAS;AACT,GAXD,EAWG,EAXH,EAHsB,CAgBtB;AACA;AAEA;AAKD;;AACA,sBAEC;AAAA,cACI,CAAAL,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEW,MAAL,iBACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACH;AAAA,kBAAKjB,QAAQ,CAACkB,MAAT,CAAgBZ,GAAG,CAAC,CAAD,CAAH,CAAOa,IAAP,CAAYC,KAA5B;AAAL;AAAA;AAAA;AAAA;AAAA,cADG,eAEF;AAAK,QAAA,GAAG,EAAEd,GAAG,CAAC,CAAD,CAAH,CAAOa,IAAP,CAAYE,SAAZ,CAAsBC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFE,eAGH;AAAA,kBAAItB,QAAQ,CAACkB,MAAT,CAAgBZ,GAAG,CAAC,CAAD,CAAH,CAAOa,IAAP,CAAYI,IAA5B;AAAJ;AAAA;AAAA;AAAA;AAAA,cAHG,eAKH;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACA;AAAA,oBAAKvB,QAAQ,CAACkB,MAAT,CAAgBZ,GAAG,CAAC,CAAD,CAAH,CAAOa,IAAP,CAAYC,KAA5B;AAAL;AAAA;AAAA;AAAA;AAAA,gBADA,eAGA;AAAA,oBAAIpB,QAAQ,CAACkB,MAAT,CAAgBZ,GAAG,CAAC,CAAD,CAAH,CAAOa,IAAP,CAAYI,IAA5B;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cALG;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAcK;AAAA,6BAAK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAfT,mBAFD;AAsBC,CA/CD,C,CAiDA;;;GAjDMlB,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import * as React from 'react';\nimport Prismic from '@prismicio/client';\nimport { Date, Link, RichText } from 'prismic-reactjs';\n// TODO удаляй неиспользуемый код\n// import { format } from 'date-fns-tz';\nimport './style.css'\nimport loader from './components/Loader'\nimport Loader from './components/Loader';\n\n// TODO вынеси в константы эти токены и урлы, хорошей практикой считается разделять это и не держать все одном файле\nconst apiEndpoint = 'https://kelaseff.cdn.prismic.io/api/v2';\nconst accessToken = 'MC5ZSEhub0JNQUFDRUFsdm5u.O--_ve-_vX_vv714Je-_ve-_ve-_vW7vv70K77-977-9d13vv70D77-977-977-9au-_vQfvv71YA33vv70P77-9';\n\n//TODO Следи за форматированием кода\nconst BlogPage = () => {\n\tconst [doc, setDocData] = React.useState([]);\n\n\tReact.useEffect(() => {\n\t\tconst client = Prismic.client(apiEndpoint, { accessToken });\n\t\tconst fetchData = async () => {\n\t\t\tconst response = await client.query(\n\t\t\t\tPrismic.Predicates.at('document.type', 'blog')\n\t\t\t)\n\t\t\tif (response) {\n\t\t\t\tsetDocData(response.results)\n\t\t\t}\n\t\t}\n\t\tfetchData();\n\t}, [])\n\n\t// TODO удаляй не используемый код\n\t// const timestamp = ;\n\n\t// console.log(doc[1].data.data);\n\n\n\n\t\n// TODO форматирование кода и отступы\nreturn (\n\t\n\t<>\n    {doc?.length ? (\n        <div className='blogWraper'>\n\t\t\t\t\t<h1>{RichText.asText(doc[1].data.title)}</h1>\n\t\t\t\t\t\t<img src={doc[1].data.logo_page.url}/>\n\t\t\t\t\t<p>{RichText.asText(doc[1].data.text)}</p>\n\n\t\t\t\t\t<div className='blogWraper'>\n\t\t\t\t\t<h1>{RichText.asText(doc[0].data.title)}</h1>\n\t\t\t\t\t\t{/* <img src={doc[1].data.logo_page.url}/> */}\n\t\t\t\t\t<p>{RichText.asText(doc[0].data.text)}</p>\n        </div>\n\n        </div>\n\t\t\t\t\n      ) : <div><Loader /></div>\n    }\n\t</>\n\t\n)\n}\n\n// TODO оберни в React.memo\nexport default BlogPage;"]},"metadata":{},"sourceType":"module"}