{"ast":null,"code":"var _jsxFileName = \"/Users/dima/Documents/my Blog/blog/src/component/Blog/BlogPage.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Prismic from '@prismicio/client';\nimport { Link, RichText } from 'prismic-reactjs';\nimport './style.css';\nimport Loader from './components/Loader';\nimport { apiEndpoint, accessToken } from '../../data/constants';\nimport { format } from 'date-fns-tz'; // TODO вынеси в константы эти токены и урлы, хорошей практикой считается разделять это и не держать все одном файле\n//done\n//TODO Следи за форматированием кода\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BlogPage = () => {\n  _s();\n\n  const [doc, setDocData] = React.useState([]); // console.log(doc)\n\n  React.useEffect(() => {\n    const client = Prismic.client(apiEndpoint, {\n      accessToken\n    });\n\n    const fetchData = async () => {\n      const response = await client.query(Prismic.Predicates.at('document.type', 'blog'));\n\n      if (response) {\n        setDocData(response.results);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const arr = [{\n    alternate_languages: [],\n    data: {\n      title: Array(1),\n      date: \"2021-04-15\",\n      logo_page: {},\n      text: Array(1)\n    },\n    first_publication_date: \"2021-04-10T18:24:56+0000\",\n    href: \"https://kelaseff.cdn.prismic.io/api/v2/documents/search?ref=YIAUkRAAACkAF6Zz&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YHHtcxMAACIAlxQa%22%29+%5D%5D\",\n    id: \"YHHtcxMAACIAlxQa\",\n    lang: \"ru\",\n    last_publication_date: \"2021-04-21T12:03:29+0000\",\n    linked_documents: [],\n    slugs: 2[(\"%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-lorem-ipsum\", \"test-test\")],\n    tags: 3[(\"Lorem\", \"ipsum\", \"text\")],\n    type: \"blog\",\n    uid: null,\n    __proto__: Object\n  }, {\n    alternate_languages: [],\n    data: {\n      title: Array(1),\n      date: null,\n      logo_page: {},\n      text: Array(2)\n    },\n    first_publication_date: \"2021-04-12T07:34:13+0000\",\n    href: \"https://kelaseff.cdn.prismic.io/api/v2/documents/search?ref=YIAUkRAAACkAF6Zz&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YHP36RMAACEAoCLw%22%29+%5D%5D\",\n    id: \"YHP36RMAACEAoCLw\",\n    lang: \"ru\",\n    last_publication_date: \"2021-04-21T11:08:58+0000\",\n    linked_documents: [],\n    slugs: 2[(\"%D0%BE%D1%82%D0%BA%D1%83%D0%B4%D0%B0-%D0%BE%D0%BD-%D0%BF%D0%BE%D1%8F%D0%B2%D0%B8%D0%BB%D1%81%D1%8F\", \"%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82\")],\n    tags: 3[(\"Lorem\", \"ipsum\", \"text\")],\n    type: \"blog\",\n    uid: null,\n    __proto__: Object\n  }];\n  console.log(arr);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (doc === null || doc === void 0 ? void 0 : doc.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogWraper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: RichText.asText(doc[1].data.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: doc[0].data.logo_page.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: RichText.asText(doc[1].data.text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blogWraper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: RichText.asText(doc[0].data.title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: RichText.asText(doc[0].data.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(BlogPage, \"7F2Wqun08SntStJJH/c+b4sYSxI=\");\n\n_c = BlogPage;\nexport default _c2 = /*#__PURE__*/React.memo(BlogPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BlogPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/dima/Documents/my Blog/blog/src/component/Blog/BlogPage.js"],"names":["React","Prismic","Link","RichText","Loader","apiEndpoint","accessToken","format","BlogPage","doc","setDocData","useState","useEffect","client","fetchData","response","query","Predicates","at","results","arr","alternate_languages","data","title","Array","date","logo_page","text","first_publication_date","href","id","lang","last_publication_date","linked_documents","slugs","tags","type","uid","__proto__","Object","console","log","length","asText","url","memo"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,sBAAxC;AACA,SAASC,MAAT,QAAuB,aAAvB,C,CAGA;AACA;AAEA;;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,GAAD,EAAMC,UAAN,IAAoBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA1B,CADuB,CAEvB;;AAECX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACrB,UAAMC,MAAM,GAAGZ,OAAO,CAACY,MAAR,CAAeR,WAAf,EAA4B;AAAEC,MAAAA;AAAF,KAA5B,CAAf;;AACA,UAAMQ,SAAS,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACG,KAAP,CACtBf,OAAO,CAACgB,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,MAAvC,CADsB,CAAvB;;AAGA,UAAIH,QAAJ,EAAc;AACbL,QAAAA,UAAU,CAACK,QAAQ,CAACI,OAAV,CAAV;AACA;AACD,KAPD;;AAQAL,IAAAA,SAAS;AACT,GAXD,EAWG,EAXH;AAaD,QAAMM,GAAG,GAAE,CAAC;AACTC,IAAAA,mBAAmB,EAAE,EADZ;AAETC,IAAAA,IAAI,EAAE;AAACC,MAAAA,KAAK,EAAEC,KAAK,CAAC,CAAD,CAAb;AAAkBC,MAAAA,IAAI,EAAE,YAAxB;AAAsCC,MAAAA,SAAS,EAAE,EAAjD;AAAqDC,MAAAA,IAAI,EAAEH,KAAK,CAAC,CAAD;AAAhE,KAFG;AAGTI,IAAAA,sBAAsB,EAAE,0BAHf;AAITC,IAAAA,IAAI,EAAE,oJAJG;AAKTC,IAAAA,EAAE,EAAE,kBALK;AAMTC,IAAAA,IAAI,EAAE,IANG;AAOTC,IAAAA,qBAAqB,EAAE,0BAPd;AAQTC,IAAAA,gBAAgB,EAAE,EART;AASTC,IAAAA,KAAK,EAAG,CAAD,EAAK,iEAAiE,WAAtE,EATE;AAUTC,IAAAA,IAAI,EAAG,CAAD,EAAK,SAAS,OAAT,EAAkB,MAAvB,EAVG;AAWTC,IAAAA,IAAI,EAAE,MAXG;AAYTC,IAAAA,GAAG,EAAE,IAZI;AAaTC,IAAAA,SAAS,EAAEC;AAbF,GAAD,EAeX;AACIlB,IAAAA,mBAAmB,EAAE,EADzB;AAEGC,IAAAA,IAAI,EAAE;AAACC,MAAAA,KAAK,EAAEC,KAAK,CAAC,CAAD,CAAb;AAAkBC,MAAAA,IAAI,EAAE,IAAxB;AAA8BC,MAAAA,SAAS,EAAE,EAAzC;AAA6CC,MAAAA,IAAI,EAAEH,KAAK,CAAC,CAAD;AAAxD,KAFT;AAGGI,IAAAA,sBAAsB,EAAE,0BAH3B;AAIGC,IAAAA,IAAI,EAAE,oJAJT;AAKGC,IAAAA,EAAE,EAAE,kBALP;AAMGC,IAAAA,IAAI,EAAE,IANT;AAOGC,IAAAA,qBAAqB,EAAE,0BAP1B;AAQGC,IAAAA,gBAAgB,EAAE,EARrB;AASGC,IAAAA,KAAK,EAAG,CAAD,EAAK,sGAAsG,sCAA3G,EATV;AAUGC,IAAAA,IAAI,EAAG,CAAD,EAAK,SAAS,OAAT,EAAkB,MAAvB,EAVT;AAWGC,IAAAA,IAAI,EAAE,MAXT;AAYGC,IAAAA,GAAG,EAAE,IAZR;AAaGC,IAAAA,SAAS,EAAEC;AAbd,GAfW,CAAX;AAgCAC,EAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAZ;AAIA,sBACC;AAAA,cACI,CAAAX,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEiC,MAAL,iBACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACH;AAAA,kBAAKvC,QAAQ,CAACwC,MAAT,CAAgBlC,GAAG,CAAC,CAAD,CAAH,CAAOa,IAAP,CAAYC,KAA5B;AAAL;AAAA;AAAA;AAAA;AAAA,cADG,eAGH;AAAK,QAAA,GAAG,EAAEd,GAAG,CAAC,CAAD,CAAH,CAAOa,IAAP,CAAYI,SAAZ,CAAsBkB;AAAhC;AAAA;AAAA;AAAA;AAAA,cAHG,eAIH;AAAA,kBAAIzC,QAAQ,CAACwC,MAAT,CAAgBlC,GAAG,CAAC,CAAD,CAAH,CAAOa,IAAP,CAAYK,IAA5B;AAAJ;AAAA;AAAA;AAAA;AAAA,cAJG,eAMH;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACC;AAAA,oBAAKxB,QAAQ,CAACwC,MAAT,CAAgBlC,GAAG,CAAC,CAAD,CAAH,CAAOa,IAAP,CAAYC,KAA5B;AAAL;AAAA;AAAA;AAAA;AAAA,gBADD,eAGC;AAAA,oBAAIpB,QAAQ,CAACwC,MAAT,CAAgBlC,GAAG,CAAC,CAAD,CAAH,CAAOa,IAAP,CAAYK,IAA5B;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cANG;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAcF;AAAA,6BAAK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAfF,mBADD;AAoBC,CAzED;;GAAMnB,Q;;KAAAA,Q;AA2EN,kCAAeR,KAAK,CAAC6C,IAAN,CAAWrC,QAAX,CAAf","sourcesContent":["import * as React from 'react';\nimport Prismic from '@prismicio/client';\nimport { Link, RichText } from 'prismic-reactjs';\nimport './style.css';\nimport Loader from './components/Loader';\nimport { apiEndpoint, accessToken} from '../../data/constants';\nimport { format } from 'date-fns-tz';\n\n\n// TODO вынеси в константы эти токены и урлы, хорошей практикой считается разделять это и не держать все одном файле\n//done\n\n//TODO Следи за форматированием кода\nconst BlogPage = () => {\nconst [doc, setDocData] = React.useState([]);\n// console.log(doc)\n\n\tReact.useEffect(() => {\n\t\tconst client = Prismic.client(apiEndpoint, { accessToken });\n\t\tconst fetchData = async () => {\n\t\t\tconst response = await client.query(\n\t\t\t\tPrismic.Predicates.at('document.type', 'blog')\n\t\t\t)\n\t\t\tif (response) {\n\t\t\t\tsetDocData(response.results)\n\t\t\t}\n\t\t}\n\t\tfetchData();\n\t}, [])\n\nconst arr =[{\n\t\t\talternate_languages: [],\n\t\t\tdata: {title: Array(1), date: \"2021-04-15\", logo_page: {}, text: Array(1)},\n\t\t\tfirst_publication_date: \"2021-04-10T18:24:56+0000\",\n\t\t\thref: \"https://kelaseff.cdn.prismic.io/api/v2/documents/search?ref=YIAUkRAAACkAF6Zz&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YHHtcxMAACIAlxQa%22%29+%5D%5D\",\n\t\t\tid: \"YHHtcxMAACIAlxQa\",\n\t\t\tlang: \"ru\",\n\t\t\tlast_publication_date: \"2021-04-21T12:03:29+0000\",\n\t\t\tlinked_documents: [],\n\t\t\tslugs: (2) [\"%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-lorem-ipsum\", \"test-test\"],\n\t\t\ttags: (3) [\"Lorem\", \"ipsum\", \"text\"],\n\t\t\ttype: \"blog\",\n\t\t\tuid: null,\n\t\t\t__proto__: Object,\n},\n{\n\t\t\t\talternate_languages: [],\n\t\t\tdata: {title: Array(1), date: null, logo_page: {}, text: Array(2)},\n\t\t\tfirst_publication_date: \"2021-04-12T07:34:13+0000\",\n\t\t\thref: \"https://kelaseff.cdn.prismic.io/api/v2/documents/search?ref=YIAUkRAAACkAF6Zz&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YHP36RMAACEAoCLw%22%29+%5D%5D\",\n\t\t\tid: \"YHP36RMAACEAoCLw\",\n\t\t\tlang: \"ru\",\n\t\t\tlast_publication_date: \"2021-04-21T11:08:58+0000\",\n\t\t\tlinked_documents: [],\n\t\t\tslugs: (2) [\"%D0%BE%D1%82%D0%BA%D1%83%D0%B4%D0%B0-%D0%BE%D0%BD-%D0%BF%D0%BE%D1%8F%D0%B2%D0%B8%D0%BB%D1%81%D1%8F\", \"%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82\"],\n\t\t\ttags: (3) [\"Lorem\", \"ipsum\", \"text\"],\n\t\t\ttype: \"blog\",\n\t\t\tuid: null,\n\t\t\t__proto__: Object,\n\n}]\n\nconsole.log(arr)\n\t\n\n\nreturn (\n\t<>\n    {doc?.length ? (\n        <div className='blogWraper'>\n\t\t\t\t\t<h1>{RichText.asText(doc[1].data.title)}</h1>\n\t\t\t\t\t{/* <p>{date}</p> */}\n\t\t\t\t\t<img src={doc[0].data.logo_page.url}/>\n\t\t\t\t\t<p>{RichText.asText(doc[1].data.text)}</p>\n\n\t\t\t\t\t<div className='blogWraper'>\n\t\t\t\t\t\t<h1>{RichText.asText(doc[0].data.title)}</h1>\n\t\t\t\t\t\t\t{/* <p>{date}</p> */}\n\t\t\t\t\t\t<p>{RichText.asText(doc[0].data.text)}</p>\n        \t</div>\n        </div>\n      ) : \n\t\t\t<div><Loader /></div>\n    }\n\t</>\n\t)\n}\n\nexport default React.memo(BlogPage);"]},"metadata":{},"sourceType":"module"}