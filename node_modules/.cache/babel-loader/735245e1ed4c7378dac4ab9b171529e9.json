{"ast":null,"code":"var _jsxFileName = \"/Users/dima/Documents/my Blog/blog/src/component/Blog/BlogPage.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Prismic from '@prismicio/client';\nimport { Date, Link, RichText } from 'prismic-reactjs'; // TODO удаляй неиспользуемый код\n// import { format } from 'date-fns-tz';\n\nimport './style.css';\nimport loader from './components/Loader'; // TODO вынеси в константы эти токены и урлы, хорошей практикой считается разделять это и не держать все одном файле\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiEndpoint = 'https://kelaseff.cdn.prismic.io/api/v2';\nconst accessToken = 'MC5ZSEhub0JNQUFDRUFsdm5u.O--_ve-_vX_vv714Je-_ve-_ve-_vW7vv70K77-977-9d13vv70D77-977-977-9au-_vQfvv71YA33vv70P77-9'; //TODO Следи за форматированием кода\n\nconst BlogPage = () => {\n  _s();\n\n  const [doc, setDocData] = React.useState([]);\n  React.useEffect(() => {\n    const client = Prismic.client(apiEndpoint, {\n      accessToken\n    });\n\n    const fetchData = async () => {\n      const response = await client.query(Prismic.Predicates.at('document.type', 'blog'));\n\n      if (response) {\n        setDocData(response.results);\n      }\n    };\n\n    fetchData();\n  }, []); // TODO удаляй не используемый код\n  // const timestamp = ;\n  // console.log(doc[1].data.data);\n  // TODO форматирование кода и отступы\n\n  return (\n    /*#__PURE__*/\n    // <>\n    //   {doc?.length ? (\n    //       <div className='blogWraper'>\n    // \t\t\t\t<h1>{RichText.asText(doc[1].data.title)}</h1>\n    // \t\t\t\t\t<img src={doc[1].data.logo_page.url}/>\n    // \t\t\t\t<p>{RichText.asText(doc[1].data.text)}</p>\n    // \t\t\t\t<div className='blogWraper'>\n    // \t\t\t\t<h1>{RichText.asText(doc[0].data.title)}</h1>\n    // \t\t\t\t\t{/* <img src={doc[1].data.logo_page.url}/> */}\n    // \t\t\t\t<p>{RichText.asText(doc[0].data.text)}</p>\n    //       </div>\n    //       </div>\n    //     ) : <div>{loader}</div>\n    //   }\n    // </>\n    _jsxDEV(\"div\", {\n      children: loader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 2\n    }, this)\n  );\n}; // TODO оберни в React.memo\n\n\n_s(BlogPage, \"7F2Wqun08SntStJJH/c+b4sYSxI=\");\n\n_c = BlogPage;\nexport default BlogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"sources":["/Users/dima/Documents/my Blog/blog/src/component/Blog/BlogPage.js"],"names":["React","Prismic","Date","Link","RichText","loader","apiEndpoint","accessToken","BlogPage","doc","setDocData","useState","useEffect","client","fetchData","response","query","Predicates","at","results"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,QAArB,QAAqC,iBAArC,C,CACA;AACA;;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;;AACA,MAAMC,WAAW,GAAG,wCAApB;AACA,MAAMC,WAAW,GAAG,mHAApB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,GAAD,EAAMC,UAAN,IAAoBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA1B;AAEAX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACrB,UAAMC,MAAM,GAAGZ,OAAO,CAACY,MAAR,CAAeP,WAAf,EAA4B;AAAEC,MAAAA;AAAF,KAA5B,CAAf;;AACA,UAAMO,SAAS,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACG,KAAP,CACtBf,OAAO,CAACgB,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,MAAvC,CADsB,CAAvB;;AAGA,UAAIH,QAAJ,EAAc;AACbL,QAAAA,UAAU,CAACK,QAAQ,CAACI,OAAV,CAAV;AACA;AACD,KAPD;;AAQAL,IAAAA,SAAS;AACT,GAXD,EAWG,EAXH,EAHsB,CAgBtB;AACA;AAEA;AAKD;;AACA;AAAA;AAEC;AACC;AACA;AACD;AACA;AACA;AAEA;AACA;AACA;AACA;AACC;AAEA;AAEA;AACA;AACD;AACA;AAAA,gBAAMT;AAAN;AAAA;AAAA;AAAA;AAAA;AApBD;AAsBC,CA/CD,C,CAiDA;;;GAjDMG,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import * as React from 'react';\nimport Prismic from '@prismicio/client';\nimport { Date, Link, RichText } from 'prismic-reactjs';\n// TODO удаляй неиспользуемый код\n// import { format } from 'date-fns-tz';\nimport './style.css'\nimport loader from './components/Loader'\n\n// TODO вынеси в константы эти токены и урлы, хорошей практикой считается разделять это и не держать все одном файле\nconst apiEndpoint = 'https://kelaseff.cdn.prismic.io/api/v2';\nconst accessToken = 'MC5ZSEhub0JNQUFDRUFsdm5u.O--_ve-_vX_vv714Je-_ve-_ve-_vW7vv70K77-977-9d13vv70D77-977-977-9au-_vQfvv71YA33vv70P77-9';\n\n//TODO Следи за форматированием кода\nconst BlogPage = () => {\n\tconst [doc, setDocData] = React.useState([]);\n\n\tReact.useEffect(() => {\n\t\tconst client = Prismic.client(apiEndpoint, { accessToken });\n\t\tconst fetchData = async () => {\n\t\t\tconst response = await client.query(\n\t\t\t\tPrismic.Predicates.at('document.type', 'blog')\n\t\t\t)\n\t\t\tif (response) {\n\t\t\t\tsetDocData(response.results)\n\t\t\t}\n\t\t}\n\t\tfetchData();\n\t}, [])\n\n\t// TODO удаляй не используемый код\n\t// const timestamp = ;\n\n\t// console.log(doc[1].data.data);\n\n\n\n\t\n// TODO форматирование кода и отступы\nreturn (\n\t\n\t// <>\n  //   {doc?.length ? (\n  //       <div className='blogWraper'>\n\t// \t\t\t\t<h1>{RichText.asText(doc[1].data.title)}</h1>\n\t// \t\t\t\t\t<img src={doc[1].data.logo_page.url}/>\n\t// \t\t\t\t<p>{RichText.asText(doc[1].data.text)}</p>\n\n\t// \t\t\t\t<div className='blogWraper'>\n\t// \t\t\t\t<h1>{RichText.asText(doc[0].data.title)}</h1>\n\t// \t\t\t\t\t{/* <img src={doc[1].data.logo_page.url}/> */}\n\t// \t\t\t\t<p>{RichText.asText(doc[0].data.text)}</p>\n  //       </div>\n\n  //       </div>\n\t\t\t\t\n  //     ) : <div>{loader}</div>\n  //   }\n\t// </>\n\t<div>{loader}</div>\n)\n}\n\n// TODO оберни в React.memo\nexport default BlogPage;"]},"metadata":{},"sourceType":"module"}